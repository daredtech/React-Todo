{"ast":null,"code":"var _jsxFileName = \"/Users/red/Desktop/lambda/projects/React-Todo/src/components/TodoComponents/Todo.js\";\nimport React from 'react';\n\nconst Todo = props => {\n  console.log('todo task, id, completed', props.item.task, props.item.id, props.item.completed);\n\n  if (props.item.completed === true) {\n    return React.createElement(\"div\", {\n      className: \"todo-item\",\n      textDecorationLine: \"line-through\",\n      id: props.item.id,\n      completed: props.item.completed,\n      onClick: () => props.toggleItem(props.item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" \", props.item.task));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"todo-item\",\n      id: props.item.id,\n      completed: props.item.completed,\n      onClick: () => props.toggleItem(props.item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", props.item.task));\n  }\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/red/Desktop/lambda/projects/React-Todo/src/components/TodoComponents/Todo.js"],"names":["React","Todo","props","console","log","item","task","id","completed","toggleItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAElBC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAK,CAACG,IAAN,CAAWC,IAAnD,EAAyDJ,KAAK,CAACG,IAAN,CAAWE,EAApE,EAAwEL,KAAK,CAACG,IAAN,CAAWG,SAAnF;;AAEA,MAAGN,KAAK,CAACG,IAAN,CAAWG,SAAX,KAAuB,IAA1B,EAA+B;AAC3B,WACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAA6B,MAAA,kBAAkB,EAAE,cAAjD;AACI,MAAA,EAAE,EAAIN,KAAK,CAACG,IAAN,CAAWE,EADrB;AAEI,MAAA,SAAS,EAAIL,KAAK,CAACG,IAAN,CAAWG,SAF5B;AAGI,MAAA,OAAO,EAAI,MAAMN,KAAK,CAACO,UAAN,CAAiBP,KAAK,CAACG,IAAN,CAAWE,EAA5B,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKL,KAAK,CAACG,IAAN,CAAWC,IAAhB,CAJJ,CADJ;AAQH,GATD,MAUI;AACA,WACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AACI,MAAA,EAAE,EAAIJ,KAAK,CAACG,IAAN,CAAWE,EADrB;AAEI,MAAA,SAAS,EAAIL,KAAK,CAACG,IAAN,CAAWG,SAF5B;AAGI,MAAA,OAAO,EAAI,MAAMN,KAAK,CAACO,UAAN,CAAiBP,KAAK,CAACG,IAAN,CAAWE,EAA5B,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKL,KAAK,CAACG,IAAN,CAAWC,IAAhB,CAJJ,CADJ;AAQH;AAKJ,CA5BD;;AA8BC,eAAeL,IAAf","sourcesContent":["import React from 'react';\n\nconst Todo = props => {\n\n    console.log('todo task, id, completed', props.item.task, props.item.id, props.item.completed)\n\n    if(props.item.completed===true){\n        return(\n            <div className = 'todo-item' textDecorationLine= 'line-through'\n                id = {props.item.id}\n                completed = {props.item.completed}\n                onClick = {() => props.toggleItem(props.item.id)}>\n                <p> {props.item.task}</p>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div className = 'todo-item'\n                id = {props.item.id}\n                completed = {props.item.completed}\n                onClick = {() => props.toggleItem(props.item.id)}>\n                <p> {props.item.task}</p>\n            </div>\n        )\n    }\n    \n  \n\n\n}\n\n export default Todo;"]},"metadata":{},"sourceType":"module"}