{"ast":null,"code":"import _objectSpread from \"/Users/red/Desktop/lambda/projects/React-Todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/red/Desktop/lambda/projects/React-Todo/src/App.js\";\nimport React from 'react';\nimport TodoForm from './components/TodoComponents/TodoForm';\nimport TodoList from './components/TodoComponents/TodoList';\nimport \"./styles.css\";\nconst todoCollection = [];\n\nclass App extends React.Component {\n  // constructor\n  constructor() {\n    super();\n\n    this.addItem = itemName => {\n      // create a new item\n      const newItem = {\n        task: itemName,\n        id: Date.now(),\n        completed: false // update the state\n\n      };\n      this.setState({\n        todo_collection: [...this.state.todo_collection, newItem]\n      });\n    };\n\n    this.toggleItem = id => {\n      console.log(id); // find the item that was toggled, update its state\n\n      this.setState({\n        todo_collection: this.state.todo_collection.map(item => {\n          if (item.id === id) {\n            return _objectSpread({}, item, {\n              //change the completed status\n              completed: !item.completed\n            }); // if not a matching item, do nothing\n          } else {\n            return item;\n          }\n        })\n      });\n    };\n\n    this.clearItems = () => {\n      this.setState({\n        todo_collection: todoCollection\n      });\n    };\n\n    this.state = {\n      todo_collection: todoCollection\n    };\n  }\n\n  // to display the components\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Welcome to your Todo App!\"), React.createElement(TodoList, {\n      todo_collection: this.state.todo_collection,\n      toggleItem: this.toggleItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(TodoForm, {\n      addItem: this.addItem,\n      clearItems: this.clearItems,\n      todoCollection: todoCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/red/Desktop/lambda/projects/React-Todo/src/App.js"],"names":["React","TodoForm","TodoList","todoCollection","App","Component","constructor","addItem","itemName","newItem","task","id","Date","now","completed","setState","todo_collection","state","toggleItem","console","log","map","item","clearItems","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAO,cAAP;AAGA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChC;AACAC,EAAAA,WAAW,GAAE;AACX;;AADW,SAQbC,OARa,GAQHC,QAAQ,IAAI;AACpB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,IAAI,EAAEF,QADQ;AAEdG,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFU;AAGdC,QAAAA,SAAS,EAAE,KAHG,CAKhB;;AALgB,OAAhB;AAMA,WAAKC,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,eAAf,EAAgCP,OAAhC;AADL,OAAd;AAGD,KAnBY;;AAAA,SAsBbS,UAtBa,GAsBAP,EAAE,IAAI;AACjBQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ,EADiB,CAEjB;;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE,KAAKC,KAAL,CAAWD,eAAX,CAA2BK,GAA3B,CAA+BC,IAAI,IAAI;AACtD,cAAIA,IAAI,CAACX,EAAL,KAAYA,EAAhB,EAAoB;AAClB,qCAEKW,IAFL;AAGE;AACAR,cAAAA,SAAS,EAAE,CAACQ,IAAI,CAACR;AAJnB,eADkB,CAOpB;AACC,WARD,MAQO;AACL,mBAAOQ,IAAP;AACD;AACF,SAZgB;AADL,OAAd;AAeD,KAxCY;;AAAA,SA2CbC,UA3Ca,GA2CA,MAAK;AAChB,WAAKR,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAEb;AADL,OAAd;AAGD,KA/CY;;AAEX,SAAKc,KAAL,GAAa;AACXD,MAAAA,eAAe,EAAEb;AADN,KAAb;AAGD;;AA6CD;AACAqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAGE,oBAAC,QAAD;AAAU,MAAA,eAAe,EAAE,KAAKP,KAAL,CAAWD,eAAtC;AAAuD,MAAA,UAAU,EAAE,KAAKE,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKX,OAAxB;AAAiC,MAAA,UAAU,EAAE,KAAKgB,UAAlD;AAA8D,MAAA,cAAc,EAAEpB,cAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AASD;;AA/D+B;;AAgEjC;AAED,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport TodoForm from './components/TodoComponents/TodoForm';\nimport TodoList from './components/TodoComponents/TodoList';\nimport \"./styles.css\";\n\n\nconst todoCollection = [];\n\nclass App extends React.Component {\n  // constructor\n  constructor(){\n    super();\n    this.state = {\n      todo_collection: todoCollection\n    };\n  };\n\n  // when add item is clicked\n  addItem = itemName => {\n    // create a new item\n    const newItem = {\n      task: itemName,\n      id: Date.now(),\n      completed: false\n    }\n    // update the state\n    this.setState({\n      todo_collection: [...this.state.todo_collection, newItem]\n    });\n  };\n\n// when toggled\n  toggleItem = id => {\n    console.log(id);\n    // find the item that was toggled, update its state\n    this.setState({\n      todo_collection: this.state.todo_collection.map(item => {\n        if (item.id === id) {\n          return {\n            // copy the rest of the vields but the one we need to change\n            ...item,\n            //change the completed status\n            completed: !item.completed\n          };\n        // if not a matching item, do nothing\n        } else {\n          return item;\n        }\n      })\n    });\n  };\n\n  // to clear the list\n  clearItems = () =>{\n    this.setState({\n      todo_collection: todoCollection\n    })\n  }\n\n\n  // to display the components\n  render() {\n    return (\n      <div>\n        <h2>Welcome to your Todo App!</h2>\n       \n        <TodoList todo_collection={this.state.todo_collection} toggleItem={this.toggleItem}/>\n        <TodoForm addItem={this.addItem} clearItems={this.clearItems} todoCollection={todoCollection}/>\n\n      </div>\n    );\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}